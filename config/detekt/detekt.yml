comments:
  active: true
  EndOfSentenceFormat:
    active: true
  KDocReferencesNonPublicProperty:
    active: true

complexity:
  active: true
  CyclomaticComplexMethod:
    active: true
    ignoreSimpleWhenEntries: true
  LongParameterList:
    active: false # Composable functions can have a large number of parameters
    functionThreshold: 10
    constructorThreshold: 10
    ignoreDefaultParameters: true
    ignoreAnnotatedParameter: [ 'SerializedName' ]
  ComplexInterface:
    active: true
    threshold: 15
  TooManyFunctions:
    active: true
    thresholdInFiles: 30
    thresholdInClasses: 30
    thresholdInInterfaces: 15
    thresholdInObjects: 30
  NamedArguments:
    active: true
  NestedScopeFunctions:
    active: true
    threshold: 2
  StringLiteralDuplication:
    active: true

exceptions:
  active: true
  NotImplementedDeclaration:
    active: true
  ObjectExtendsThrowable:
    excludes: [ '**/test/**' ]
    active: true
  TooGenericExceptionCaught:
    active: false

formatting:
  active: true
  FinalNewline:
    active: false
  FunctionReturnTypeSpacing:
    active: true
  NoWildcardImports:
    active: false
  MaximumLineLength:
    active: false
  MultiLineIfElse:
    active: false
  NoUnusedImports:
    active: false
  NoEmptyFirstLineInMethodBlock:
    active: false
  NoBlankLineBeforeRbrace:
    active: true
  SpacingBetweenDeclarationsWithAnnotations:
    active: false
  ImportOrdering:
    active: true
  Filename:
    active: false
  FunKeywordSpacing:
    active: true
  FunctionTypeReferenceSpacing:
    active: true
  KdocWrapping:
    active: true
  ModifierListSpacing:
    active: true
  ModifierOrdering:
    active: true
  TrailingCommaOnDeclarationSite:
    active: true
    useTrailingCommaOnDeclarationSite: true
  TrailingCommaOnCallSite:
    active: true
    useTrailingCommaOnCallSite: true

# RuleSet-а: https://detekt.dev/docs/rules/naming
naming:
  active: true
  PackageNaming:
    active: true
    packagePattern: '[a-z]+(\.[a-z0-9]*)*'
  EnumNaming:
    active: true
    enumEntryPattern: '[A-Z][a-z_A-Z0-9]*'
  TopLevelPropertyNaming:
    active: true
    constantPattern: '[A-Z][A-Z_a-z0-9]*'
  BooleanPropertyNaming:
    active: true
    allowedPattern: '^(is|has|are|contains|does|should|requires|IS|HAS|ARE|CONTAINS|DOES|SHOULD|REQUIRES)'
    ignoreAnnotated: [ 'Entity' ]
  FunctionNaming:
    active: true
    ignoreAnnotated: [ 'Composable' ]
  ForbiddenClassName:
    active: true
    forbiddenName: [ 'Manager' ]
  NonBooleanPropertyPrefixedWithIs:
    active: true
  VariableNaming:
    active: true
    variablePattern: '(_)?[A-Za-z][A-Za-z0-9]*'
    privateVariablePattern: '(_)?[A-Za-z][A-Za-z0-9]*'

performance:
  active: true
  CouldBeSequence:
    active: true
  SpreadOperator:
    active: false # Detekt does not take into account all compiler optimizations like (*list.toTypedArray()), and the spread operator case itself on large arrays is not relevant for us.
  UnnecessaryPartOfBinaryExpression:
    active: true

potential-bugs:
  CastToNullableType:
    active: true
  UnnecessaryNotNullCheck:
    active: true
  DontDowncastCollectionTypes:
    active: true
  ElseCaseInsteadOfExhaustiveWhen:
    active: true
  ImplicitUnitReturnType:
    active: true
    allowExplicitReturnType: false
  LateinitUsage:
    active: true
    excludes: [ '**/test/**' ]
    ignoreAnnotated: [ 'Inject', 'Entity' ]
  NullableToStringCall:
    active: false

style:
  active: true
  MultilineRawStringIndentation:
    active: true
  TrimMultilineRawString:
    active: true
  MaxLineLength:
    active: true
    excludes: [ '**/test/**' ]
    maxLineLength: 120
  NewLineAtEndOfFile:
    active: false
  WildcardImport:
    active: true
  MagicNumber:
    active: true
    ignoreEnums: true
    ignorePropertyDeclaration: true
    ignoreCompanionObjectPropertyDeclaration: true
    ignoreAnnotated: [ 'Entity', 'Composable' ]
  CascadingCallWrapping:
    active: true
    includeElvis: false
  # Redefined the order with your custom rule
  ClassOrdering:
    active: false
  DataClassShouldBeImmutable:
    active: true
    ignoreAnnotated: [ 'Entity' ]
  DestructuringDeclarationWithTooManyEntries:
    active: true
    maxDestructuringEntries: 5
  ExplicitCollectionElementAccessMethod:
    active: true
  ReturnCount:
    active: true
    max: 4
  ForbiddenComment:
    comments:
      -   reason: 'Invalid TODO comment format. Valid TODO comment format is:\n
    // TODO(Autor): Text.'
          value: 'TODO:'
    allowedPatterns: 'TODO(.+):? .+\.'
    active: true
  BracesOnIfStatements:
    active: true
  ForbiddenMethodCall:
    active: true
  MandatoryBracesLoops:
    active: true
  CanBeNonNullable:
    active: true
  MaxChainedCallsOnSameLine:
    active: true
    maxChainedCalls: 5 # Типичный кейс со строками R.string.profile.asResText().string()
  PreferToOverPairSyntax:
    active: true
  RedundantVisibilityModifierRule:
    active: true
  SpacingBetweenPackageAndImports:
    active: true
  TrailingWhitespace:
    active: true
  UnderscoresInNumericLiterals:
    active: true
  UnnecessaryAnnotationUseSiteTarget:
    active: true
  UnnecessaryInnerClass:
    active: true
  UseAnyOrNoneInsteadOfFind:
    active: true
  UnnecessaryLet:
    active: true
  UntilInsteadOfRangeTo:
    active: true
  UnusedImports:
    active: true
  UnusedPrivateMember:
    active: true
    ignoreAnnotated: [ 'Preview' ]
  UseDataClass:
    active: false
  UseEmptyCounterpart:
    active: true
  UseIfEmptyOrIfBlank:
    active: true
  UseIfInsteadOfWhen:
    active: true
  UseIsNullOrEmpty:
    active: true
  UseOrEmpty:
    active: true

TwitterCompose:
  CompositionLocalAllowlist:
    active: true
    allowedCompositionLocals:
    # You can optionally define a list of CompositionLocals that are allowed here
    # allowedCompositionLocals: LocalSomething,LocalSomethingElse
  CompositionLocalNaming:
    active: true
  ContentEmitterReturningValues:
    active: true
    # You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
  ModifierComposable:
    active: true
  ModifierMissing:
    active: true
  ModifierReused:
    active: true
  ModifierWithoutDefault:
    active: true
  MultipleEmitters:
    active: true
    # You can optionally add your own composables here
    # contentEmitters: MyComposable,MyOtherComposable
  MutableParams:
    active: true
  ComposableNaming:
    active: true
    # You can optionally disable the checks in this rule for regex matches against the composable name (e.g. molecule presenters)
    # allowedComposableFunctionNames: .*Presenter,.*MoleculePresenter
  ComposableParamOrder:
    active: true
  PreviewNaming:
    active: true
  PreviewPublic:
    active: true
    # You can optionally disable that only previews with @PreviewParameter are flagged
    # previewPublicOnlyIfParams: false
  RememberMissing:
    active: true
  UnstableCollections:
    active: true
  ViewModelForwarding:
    active: true
  ViewModelInjection:
    active: true